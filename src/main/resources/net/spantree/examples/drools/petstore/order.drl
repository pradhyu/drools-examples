package net.spantree.examples.drools.petstore

import org.slf4j.Logger
import net.spantree.examples.drools.petstore.*

global Logger log

rule "should associate order item with order"
    when
        $item: OrderItem($order: order, order.items not contains this)
    then
        $order.addItem($item);
        update($order);
end

rule "should associate discount with order"
    when
        $discount: OrderDiscount($order: order, order.items not contains this)
    then
        log.info("Adding discount to order {}", $discount);
        $order.addDiscount($discount);
        update($order);
end

rule "orders should calculate subtotal"
    when
        $order: Order($currentSubtotal: subtotal)
        $subtotal: Double(doubleValue != $currentSubtotal) from accumulate(
            OrderItem($p: product, $q: quantity),
            sum($p.getPrice() * $q)
        )
    then
        $order.setSubtotal($subtotal);
        update($order);
end

query printOrders(Double t, Double s,Order result)
    $result: Order(t:=total, s:=subtotal, result:=this)
end

//https://docs.drools.org/7.0.0.CR1/drools-docs/html_single/#_use_of_any_expressions_as_input_for_a_query
query countOrders(Integer $result)
   $result:=Number() accumulate (Order($o:this);count($o))
end

rule "print order count"
when
    exists(Order())
    countOrders($count;)
then
System.out.println("query:orderCount ordercount="+$count);
end


rule "print order and subtotal"
    when
     printOrders($t, $s, $order;)
     countOrders($count;)
     then
     System.out.println("query:printOrders=>count=" + $count + "total" + $t +", subtotoal=" +$s+ " , order="+$order);

 end


rule "orders should calculate total"
    salience 1
    when
        $order: Order(
            total != subtotal - discountAmount + stateSalesTax + localSalesTax,
            $subtotal: subtotal,
            $discountAmount: discountAmount,
            $stateSalesTax: stateSalesTax,
            $localSalesTax: localSalesTax
        )
    then
        $order.setTotal($subtotal - $discountAmount + $stateSalesTax + $localSalesTax);
        update($order);
end
